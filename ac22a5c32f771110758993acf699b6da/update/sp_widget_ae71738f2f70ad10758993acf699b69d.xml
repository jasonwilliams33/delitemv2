<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller=function($scope,delitemModalPubSub) {

	var c = this;
	//console.log(c.data);
	//var code = generateQR(c.data.sys_id);

	//setTimeout(
	//function(){
	//alert("This is running!: " + c.data.sys_id);
	//$scope.$parent.$parent.buttonClicked({ label: "OK", primary: true });
	for(var j = 0; j < c.data.sys_id.length; j++) {
		
		
	setTimeout(
	function(){
		
	var code = generateQR(c.data.sys_id[j]);
		console.log(code);
	
	},
	3000
	);
		
	}
	//},
	//3000
	//);

	//delitemModalPubSub.publish(c.data.sys_id);

	function generateQR(sys_id) {
		//console.log("This is from QR Code: " + sys_id);
		//console.log("This is from QR Code on data: " + c.data.sys_id);

		var imgArr = [];
		var dataURL = "";
		var canvas = "";
		var img = new Image();
		var ctx = "";

		//for(var i = 0; i < sys_id.length; i++) {

			//console.log(canvas);

			qrcode = new QRCode(document.getElementById('qrcode'), {
				text: sys_id,
				width: 128,
				height: 128,
				colorDark : "#000000",
				colorLight : "#ffffff",
				correctLevel : QRCode.CorrectLevel.H

			});

			img = qrcode._el.children[1];
			//imgArr.push(qrcode._el.children[1]);

		//}

		//console.log(imgArr[0]);

	//	var dataURLArr = [];
		
		//for(var j = 0; j < imgArr.length; j++) {

			canvas = document.createElement("canvas");
			canvas.width = img.width;
			canvas.height = img.height;

			// Copy the image contents to the canvas
			ctx = canvas.getContext("2d");
			ctx.drawImage(img, 0, 0);

			dataURL = canvas.toDataURL("image/png");
			//dataURLArr.push(dataURL);
			


		//}
		//console.log(JSON.stringify(dataURLArr));
		
		c.server.get({

			action: "updateDeliveryItem",
			delivery: sys_id,
			download: dataURL

		}).then(function(rsp) {


		})	
return dataURL;
		//$scope.$parent.$parent.buttonClicked({ label: "OK", primary: true }); 
	}	

}]]></client_script>
        <controller_as>c</controller_as>
        <css>.qrcode{
  margin: 20px;
	//display: none;
}

.containerQRCode,.containerLoader, .message{
	text-align: center;
}

.lds-ellipsis {
  display: inline-block;
  position: relative;
  width: 80px;
  height: 80px;
  
}
.lds-ellipsis div {
  position: absolute;
  top: 33px;
  width: 13px;
  height: 13px;
  border-radius: 50%;
  background: $brand-primary;
  animation-timing-function: cubic-bezier(0, 1, 1, 0);
}
.lds-ellipsis div:nth-child(1) {
  left: 8px;
  animation: lds-ellipsis1 0.6s infinite;
}
.lds-ellipsis div:nth-child(2) {
  left: 8px;
  animation: lds-ellipsis2 0.6s infinite;
}
.lds-ellipsis div:nth-child(3) {
  left: 32px;
  animation: lds-ellipsis2 0.6s infinite;
}
.lds-ellipsis div:nth-child(4) {
  left: 56px;
  animation: lds-ellipsis3 0.6s infinite;
}
@keyframes lds-ellipsis1 {
  0% {
    transform: scale(0);
  }
  100% {
    transform: scale(1);
  }
}
@keyframes lds-ellipsis3 {
  0% {
    transform: scale(1);
  }
  100% {
    transform: scale(0);
  }
}
@keyframes lds-ellipsis2 {
  0% {
    transform: translate(0, 0);
  }
  100% {
    transform: translate(24px, 0);
  }
}
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>delitem_generate_qr_code</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Delitem Generate QR Code</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {

	data.sys_id = input.sys_id;
	
	if(input && input.action == "updateDeliveryItem") {
		
		gs.error("JW Debug, qr code input: " + JSON.stringify(input));

		var attach = new GlideRecordSecure(DelItemConstants.DELIVERY_TABLE);
		attach.get(input.delivery);

		var dataUrl = input.download;
		var dataUrlSplit = dataUrl.split('base64,');

		var attachment = new GlideSysAttachment();
		var attachmentSysId = attachment.writeBase64(attach, "qrcode.png", "image/png", dataUrlSplit[1]);

		attach.delivery_qr_code = attachmentSysId;
		attach.update();

	}

})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-02-08 20:09:15</sys_created_on>
        <sys_id>ae71738f2f70ad10758993acf699b69d</sys_id>
        <sys_mod_count>30</sys_mod_count>
        <sys_name>Delitem Generate QR Code</sys_name>
        <sys_package display_value="Delitem" source="x_187394_delitem">ac22a5c32f771110758993acf699b6da</sys_package>
        <sys_policy/>
        <sys_scope display_value="Delitem">ac22a5c32f771110758993acf699b6da</sys_scope>
        <sys_update_name>sp_widget_ae71738f2f70ad10758993acf699b69d</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-02-05 13:22:59</sys_updated_on>
        <template><![CDATA[<div class="containerLoader">
  <div>
    <span class="message">
      <h2>
        Generating QR Code
      </h2>
    </span>
  </div>
  <div class="lds-ellipsis"><div></div><div></div><div></div><div></div></div>
</div>
<div class="containerQRCode">
  <div class="qrcode" id="qrcode">
    <canvas id="canvas" width="200" height="200"></canvas>
  </div>
</div>
]]></template>
    </sp_widget>
</record_update>

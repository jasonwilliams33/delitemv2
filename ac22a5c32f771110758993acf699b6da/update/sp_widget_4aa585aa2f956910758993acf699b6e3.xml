<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller=function($scope,delitemModalPubSub) {
	/* widget controller */
	var c = this;

	//console.log(c);
	
	$scope.currentPage = 0;
	$scope.rowsPerPage = 5;
	
	$scope.numberOfPages = function() {
		
		return Math.ceil($scope.c.data.list.length/$scope.rowsPerPage);
		
	};

	c.data.disabled = true;
	c.data.selectedDeliveryArr = [];

	c.data.missingFields = '';
	c.missingFieldsError = '';
	c.data.showLocationUpdate = false;

	c.selectedSingleChange = function(e, data) {
//console.log(data);
		var selectedItem = _.find(c.data.list, {'selected': true});
		
		if(selectedItem) {

			c.data.selectedItem = data;			

			if(selectedItem.sys_id == data.sys_id) {
				c.data.disabled = false;
				return;

			}	else {

				_.find(c.data.list, {'sys_id': selectedItem.sys_id}).selected = false;
				_.find(c.data.list, {'sys_id': data.sys_id}).selected = true;			
				e.stopPropagation();
				e.preventDefault();

				return false;

			}

		}		

		if(selectedItem) {


		}

	}

	c.selectedMultipleChange = function(sys_id) {

		var selectedItemIndex = c.data.selectedDeliveryArr.indexOf(sys_id);
//console.log(sys_id);
		if(selectedItemIndex == -1) {

			c.data.selectedDeliveryArr.push(sys_id);

		} else {

			c.data.selectedDeliveryArr.splice(selectedItemIndex, 1);

		}

		if(c.data.selectedDeliveryArr.length > 0) { 

			c.data.disabled = false;

		} else {

			c.data.disabled = true;

		}
//console.log(c.data.selectedDeliveryArr);
	}

	c.collectDelivery = function() {
		//console.log(c.data.selectedItem);
		/*				//console.log(c);	
		c.server.get({

			action: "retrieveDeliveryItems",
			deliverySysId: c.data.selectedItem.sys_id,
			deliveryItems: c.data.selectedItem.deliveryItems,
			recipientFirstName: c.data.selectedItem.recipientFirstName

		}).then(function(rsp) {
//console.log(rsp);
			c.data.deliverySummaryWidget = rsp.data.deliverySummaryWidget;

			c.data.retrievedDeliveryItemArr = rsp.data.retrievedDeliveryItemArr;
//console.log(c.data.retrievedDeliveryItemArr);
		})	

		c.data.deliverySelected = true;*/

	}

	c.sendReminders = function(action) {
		
		try {
			

		if(action == "all") {

			c.data.selectedDeliveryArr = c.data.outstandingDeliveryArr;

		}

		//console.log(c.data.selectedDeliveryArr);

		c.server.get({

			action: "sendReminders",
			selectedDeliveryArr: c.data.selectedDeliveryArr

		}).then(function(rsp) {

			var modalReturnObj = {

				"modalAction" : "remindersSent"

			}

			delitemModalPubSub.publish(modalReturnObj);

		})
		} catch (err) {
			//console.log(err);
		}
	}

	c.confirmCollectionLocation = function(delivery) {

		c.data.showLocationUpdate = true;
		c.data.deliveryItemSysId = delivery.sys_id;
		c.data.expectedItemRecipient = delivery.recipient_first_name

	}

	c.saveItem = function(saveAction) {

		if((c.data.recipient.value == undefined || c.data.recipient.value == '') && saveAction != "confirmLocation") {

			c.data.missingFields += 'Recipient,';

		}

		if(c.data.collectionLocation == undefined || c.data.collectionLocation == '') {

			c.data.missingFields += 'Collection Location,';

		}

		if(c.data.missingFields != '') {

			c.data.missingFieldsError = c.generateErrorString(c.data.missingFields);
			c.data.missingFields = '';
			c.data.showError = true;

			$timeout(function() {

				c.data.showError = false;
				c.data.missingFields = '';
				c.data.missingFieldsError = '';

			},3000);

			return;

		}

		else {

			if(saveAction == "confirmLocation") {

				c.received();

			} else {

				c.insertItems(saveAction);

			}

		}

	}

	c.received = function() {
		//..console.log(deliveryItemSysId);
		c.server.get({

			action: "itemReceived",
			collectionLocation: c.data.collectionLocation,
			item: c.data.deliveryItemSysId						

		}).then(function(rsp) {

			c.data.showLocationUpdate = false;
			c.data.collectionLocation = '';

		})

	}

};]]></client_script>
        <controller_as>c</controller_as>
        <css>
.btn span.glyphicon {    			
	opacity: 0;
}

.btn.active span.glyphicon {				
	opacity: 1;		
  color: #ffffff;
}

.btn.active{
  background: $brand-primary;
  color: #ffffff;
}

.btn span.glyphicon {    			
	opacity: 0;
}

.btn.active span.glyphicon {				
	opacity: 1;		
  color: #ffffff;
}

.btn.active{
  background: $brand-primary;
  color: #ffffff;
}

.btn input{
	display:none;
}

//////////////

.panel-heading {
  padding-left: 8px;
}

thead {
  border-bottom: 1px solid #ddd;
}

table {
  margin-bottom: 0;
}

.table &gt; thead &gt; tr &gt; th {
  
  border: 1px solid #ddd;
  cursor: pointer;
  vertical-align: middle;

  &amp;:nth-child(2) {
    border-left: none;
  }



  &amp;:last-child {
    border-right: none;
  }
}

th i {
  display: inline-block;
  margin-left: 5px;
  color: #A0A0A0;
}

div.data-table-high-contrast th i {
 color: $gray; 
}

th .disabled{
  color:#ddd;
}

.th-title {
  display: inline-block;
  color: $primary;
}

.panel-body {
  overflow: auto;
  padding: 0px;
}

/*
.selected {
  color: #fff;
  background-color: $data-table-selected;
  border-color: 1px solid #fff;
}*/

tbody tr:last-child {
  border-bottom: none;
}

.pruned-msg {
  padding-bottom: 10px;
  padding-left: 4px;
  text-align: center;
}

.pruned-msg-filter-pad {
  padding-top:8px;
}

.filter-breadcrumbs {
  padding-top: 3px;
}

.filter-breadcrumbs ~ .table {
  border-top: 1px solid #ddd;
}

.dropdown-toggle {
  background: none;
  padding: 0 0 4px 0;
}

.sp-list-cell {
  white-space: pre-wrap;
}
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>delitem_data_table</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Delitem Data Table</name>
        <option_schema>[{"hint":"Filter to be applied to specified table","name":"filter","section":"Data","label":"Filter","type":"string"},{"displayValue":"Table","hint":"Table to be Queried","name":"table","section":"Data","label":"Table","type":"reference","value":"sys_db_object","ed":{"reference":"sys_db_object"}},{"hint":"Fields to be displayed from specified tab;e","name":"fields","section":"Data","label":"Fields","type":"field_list"},{"name":"inline_button","section":"Behavior","label":"Inline Button","type":"boolean"},{"name":"button_label","section":"Behavior","label":"Button Label","type":"string"},{"name":"inline_checkbox","section":"Behavior","label":"Inline Checkbox","type":"string"}]</option_schema>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	/* populate the 'data' object */
	/* e.g., data.table = $sp.getValue('table'); */

	/*TESTING*/
	//console.log(input);
//	data.fields = "date_received,recipient,sender,collection_location,notes,state";
	//data.fields_array = ["date_received","recipient","sender","collection_location","notes","state"];//input.fields.split(',');
	//data.fields_array = options.fields.split(',');
	//data.field_labels = [];
	
	//data.table = DelItemConstants.DELIVERY_ITEM_TABLE;
	//data.filter = "state!=" + DelItemConstants.COLLECTED;
	//data.filter = "date_receivedONToday@javascript:gs.beginningOfToday()@javascript:gs.endOfToday()^state!=" + DelItemConstants.EXPECTED;
//	data.options = ["table","filter","fields","window_size","action","inlineButton","inlineCheckbox","checkBoxSelectFunction","tableAction"];
	
		//data.page_index = 5;//data.p - 1;
	
/*	var windowSize = data.window_size || $sp.getValue('maximum_entries') || 20;
	windowSize = parseInt(windowSize);
	if (isNaN(windowSize) || windowSize < 1)
		windowSize = 20;
	data.window_size = windowSize;
		data.window_start = data.page_index * data.window_size;
	data.window_end = (data.page_index + 1) * data.window_size;*/
	
//	data.checkBoxSelectFunction = 'multiple';
	//data.inlineCheckbox = false;
	//data.inlineButton = true;
	
	/*TESTING*/
	
	function optCopy(names) {
		names.forEach(function(name) {
			data[name] = data[name];	
		})
	}
	
	try {
		
		data.field_labels = [];
	data.inputOptions = options;
	data.fields_array = options.fields.split(',');
	
	//optCopy(input);

	

		//optCopy(data.options);
		
	var fieldLabelGRS = new GlideRecordSecure(data.inputOptions.table);
	for (var i in data.fields_array) {
		var field = data.fields_array[i];

		var fieldLableGe = fieldLabelGRS.getElement(field);
		if (fieldLableGe == null)
			continue;

		data.field_labels.push(fieldLableGe.getLabel());

	}

	var queryGRS = new GlideRecordSecure(data.inputOptions.table);
	queryGRS.addEncodedQuery(data.inputOptions.filter);
	queryGRS.query();
	data.list = [];

	while (queryGRS._next()) {
		var record = {};

		$sp.getRecordElements(record, queryGRS, data.inputOptions.fields);
		record.sys_id = queryGRS.getUniqueValue();
		data.list.push(record);		
	}
	
		data.row_count = queryGRS.getRowCount();
	data.num_pages = Math.ceil(data.row_count / data.inputOptions.window_size);

	if(input) {
		try {
gs.error("JW Debug: "+ JSON.stringify(input));
		var sendReminders = new x_187394_delitem.DelitemUtils().sendReminders(input.selectedDeliveryArr);
		} catch (err) {
			gs.error("JW Debug: " + err);
		}
	}
	
	} catch (err) {
		gs.error("JW Debug: Widget Error: " + err);
	}
	
	/*data.fields = [{"name": "date_received","display_value" : "Date Received"},
								 {"name": "recipient","display_value" : "Recipient"},
								 {"name": "sender","display_value" : "Date Received"},
								 {"name": "collection_location","display_value" : "Collection Location"},
								 {"name": "notes","display_value" : "Notes"},
								 {"name": "state","display_value" : "State"}
								];*/
	//data.fields = ["Date Received","Recipient","Sender","Colection Location","Notes","State"];

	/*
	var newDeliveryGRSObj = {};
	data.newDeliveryGRSArr = [];
	data.newDeliveryFieldsArr = [];

	var newDeliveryGRS = new GlideRecordSecure(DelItemConstants.DELIVERY_ITEM_TABLE);
	newDeliveryGRS.addEncodedQuery(data.filter);
	newDeliveryGRS.query();
	while(newDeliveryGRS.next()) {

		newDeliveryGRSObj = {};
		newDeliveryGRSObj.date_received = { "fieldName" : newDeliveryGRS.date_received.getLabel() , "value" : newDeliveryGRS.date_received.toString() , "display" : true };
		newDeliveryGRSObj.recipient = { "fieldName" : "Recipient" , "value" : newDeliveryGRS.recipient.getDisplayValue() , "display" : true };
		newDeliveryGRSObj.recipient_first_name = newDeliveryGRS.recipient.first_name.toString();
		newDeliveryGRSObj.sender = { "fieldName" : "Sender" , "value" : newDeliveryGRS.sender.toString() , "display" : true };
		newDeliveryGRSObj.collection_location = { "fieldName" : "Collection Location" , "value" : newDeliveryGRS.collection_location.toString() , "display" : true };
		newDeliveryGRSObj.notes = { "fieldName" : "Notes" , "value" : newDeliveryGRS.notes.toString() , "display" : true };
		newDeliveryGRSObj.state = { "fieldName" : "State" , "value" : newDeliveryGRS.state.getDisplayValue() , "display" : true };
		newDeliveryGRSObj.sys_id = newDeliveryGRS.getUniqueValue();
		data.newDeliveryGRSArr.push(newDeliveryGRSObj);			

		data.newDeliveryFieldsArr = [newDeliveryGRS.date_received.getLabel(),newDeliveryGRS.recipient.getLabel(),newDeliveryGRS.sender.getLabel(),newDeliveryGRS.collection_location.getLabel(),newDeliveryGRS.notes.getLabel(),newDeliveryGRS.state.getLabel()];

	}
*/
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-03-03 14:53:01</sys_created_on>
        <sys_id>4aa585aa2f956910758993acf699b6e3</sys_id>
        <sys_mod_count>356</sys_mod_count>
        <sys_name>Delitem Data Table</sys_name>
        <sys_package display_value="Delitem" source="x_187394_delitem">ac22a5c32f771110758993acf699b6da</sys_package>
        <sys_policy/>
        <sys_scope display_value="Delitem">ac22a5c32f771110758993acf699b6da</sys_scope>
        <sys_update_name>sp_widget_4aa585aa2f956910758993acf699b6e3</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-06-23 16:16:40</sys_updated_on>
        <template><![CDATA[<!--  <div class="panel panel-{{options.color}} b" ng-class="{'data-table-high-contrast': accessibilityModeEnabled}">
    <div class="panel-heading form-inline" ng-hide="options.hide_header">
      <span class="dropdown m-r-xs">
        <button aria-label="{{data.title || data.table_plural}} ${Context Menu}" class="btn dropdown-toggle glyphicon glyphicon-menu-hamburger" style="line-height: 1.4em" id="optionsMenu" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"></button>
        <ul class="dropdown-menu" aria-labelledby="optionsMenu">
          <li ng-repeat="t in ::exportTypes">
            <a ng-if="!tinyUrlEnabled" ng-href="/{{data.table}}_list.do?{{::t.value}}&sysparm_query={{data.exportQueryEncoded}}&sysparm_view={{data.view}}&sysparm_fields={{data.fields}}" target="_new" tabindex="-1">${Export as} {{::t.label}}</a>
            <a ng-if="tinyUrlEnabled" ng-href="/{{data.table}}_list.do?{{::t.value}}&sysparm_tiny={{tinyUrl}}" target="_new" tabindex="-1">${Export as} {{::t.label}}</a>
          </li>
        </ul>
      </span>
      <h2 class="panel-title" style="display:inline"><i ng-if="options.glyph" class="fa fa-{{options.glyph}} m-r"></i>{{data.title || data.table_plural}}<span class="sr-only">${table} - ${page} {{data.p}}</span></h2>
      <button name="new" role="button" class="btn btn-primary btn-sm m-l-xs" ng-click="newRecord()" ng-if="options.show_new && data.canCreate && !data.newButtonUnsupported" aria-label="${Create new record}">${New}</button>
      <div class="pull-right" ng-if="options.show_keywords">
		<form ng-if="data.hasTextIndex" ng-submit="setSearch(true)">
        <div class="input-group" role="presentation">
          <input type="text" name="datatable-search" ng-model="data.keywords" ng-model-options="{debounce:250}" class="form-control" placeholder="${Keyword Search}" aria-label="${Keyword Search}">
          <span class="input-group-btn">
            <button name="search" class="btn btn-default" type="submit" aria-label="${Search}" data-original-title="{{::c.data.searchMsg}}" data-toggle="tooltip" data-placement="bottom"><span class="glyphicon glyphicon-search"></span></button>
          </span>
        </div>
        </form>
      </div>
      <div class="clearfix"></div>
    </div>
    
    <div class="panel-body">
      <div class="clearfix"></div>
      <div class="alert alert-info" ng-if="!data.list.length && !data.num_pages && !data.invalid_table && !loadingData">
        ${No records in {{data.table_label}} <span ng-if="data.filter">using that filter</span>}
      </div>
      <table class="table table-striped table-responsive" ng-if="data.list.length">
        <thead>
          <tr>
            <th ng-repeat="field in data.field_labels track by $index" class="text-nowrap" ng-click="setOrderBy(field)"
             scope="col" role="columnheader" aria-sort="{{field == data.o ? (data.d == 'asc'? 'ascending': 'descending') : 'none'}}">
              <div class="th-title" title="${Sort by} {{field == data.o ? (data.d == 'asc' ?  '${Descending}': '${Ascending}') : '${Ascending}'}}" role="button" tabindex="0" aria-label="{{data.column_labels[field]}}">{{field}}</div>
              <i class="fa" ng-if="field == data.o" ng-class="{'asc': 'fa-chevron-up', 'desc': 'fa-chevron-down'}[data.d]"></i>
            </th>
          </tr>
        </thead>
        <tbody>
          <tr ng-repeat="item in data.list track by item.sys_id">
            <td role="{{$first ? 'rowheader' : 'cell'}}" class="pointer sp-list-cell" ng-class="{selected: item.selected}" ng-click="go(item.targetTable, item)" ng-repeat="field in ::data.fields_array" data-field="{{::field}}" data-th="{{::data.column_labels[field]}}"><a href="javascript:void(0)" ng-if="$first" aria-label="${Open record}: {{::item[field].display_value}}">{{::item[field].display_value | limitTo : item[field].limit}}{{::item[field].display_value.length > item[field].limit ? '...' : ''}}</a><span ng-if="!$first">{{::item[field].display_value | limitTo : item[field].limit}}{{::item[field].display_value.length > item[field].limit ? '...' : ''}}</span>
            </td>
          </tr>
        </tbody>
      </table>
      <div ng-class="{'pruned-msg-filter-pad': (!options.show_breadcrumbs || !data.filter) && !data.list.length}" class="pruned-msg" ng-if="rowsWerePruned()">
        <span ng-if="rowsPruned == 1">${{{rowsPruned}} row removed by security constraints}</span>
        <span ng-if="rowsPruned > 1">${{{rowsPruned}} rows removed by security constraints}</span>
      </div>
    </div>
    
    <div class="panel-footer" ng-hide="options.hide_footer" ng-if="data.row_count" role="navigation" aria-label="${Pagination}">
      <div class="btn-toolbar m-r pull-left">
        <div class="btn-group">
          <a href="javascript:void(0)" ng-click="setPageNum(data.p - 1)" ng-class="{'disabled': data.p == 1}" class="btn btn-default" aria-label="${Previous page} {{data.p == 1 ? '${disabled}' : ''}}" tabindex="{{(data.p == 1) ? -1 : 0}}"><i class="fa fa-chevron-left"></i></a>
        </div>
        <div ng-if="data.num_pages > 1 && data.num_pages < 20" class="btn-group">
          <a ng-repeat="i in getNumber(data.num_pages) track by $index" ng-click="setPageNum($index + 1)" href="javascript:void(0)" ng-class="{active: ($index + 1) == data.p}" type="button" class="btn btn-default" aria-label="${Page} {{$index + 1}}" ng-attr-aria-current="{{($index + 1) == data.p ? 'page' : undefined}}">{{$index + 1}}</a>
        </div>
        <div class="btn-group">
          <a href="javascript:void(0)" ng-click="setPageNum(data.p + 1)" ng-class="{'disabled': data.p == data.num_pages}" class="btn btn-default" aria-label="${Next page} {{data.p == data.num_pages ? '${disabled}' : ''}}" tabindex="{{(data.p == data.num_pages) ? -1 : 0}}"><i class="fa fa-chevron-right"></i></a>
        </div>
      </div>
      <div class="m-t-xs panel-title">${Rows {{data.window_start + 1}} - {{ mathMin(data.window_end,data.row_count) }} of {{data.row_count}}}</div>

      <span class="clearfix"></span>
    </div>
  </div>-->

   <table class="table table-striped table-primary table-responsive table-bordered" ng-if="data.list.length">
        <caption class="sr-only">{{data.title || data.table_plural}}</caption>
        <thead>
          <tr>
            <th ng-repeat="field in data.field_labels track by $index" class="text-nowrap" ng-click="setOrderBy(field)"
             scope="col" role="columnheader" aria-sort="{{field == data.o ? (data.d == 'asc'? 'ascending': 'descending') : 'none'}}">
              <div class="th-title" title="${Sort by} {{field == data.o ? (data.d == 'asc' ?  '${Descending}': '${Ascending}') : '${Ascending}'}}" role="button" tabindex="0" aria-label="{{data.column_labels[field]}}">{{field}}</div>
              <i class="fa" ng-if="field == data.o" ng-class="{'asc': 'fa-chevron-up', 'desc': 'fa-chevron-down'}[data.d]"></i>
            </th>
            <th></th>
          </tr>
        </thead>
        <tbody>
          <tr ng-repeat="item in data.list track by item.sys_id"
              ng-if="($index < ((currentPage+1) * rowsPerPage)) && ($index >= (((currentPage+1) * rowsPerPage) - rowsPerPage))">
            <td role="{{$first ? 'rowheader' : 'cell'}}" class="pointer sp-list-cell" ng-class="{selected: item.selected}" ng-click="go(item.targetTable, item)" ng-repeat="field in ::data.fields_array" data-field="{{::field}}" data-th="{{::data.column_labels[field]}}"><a href="javascript:void(0)" ng-if="$first" aria-label="${Open record}: {{::item[field].display_value}}">{{::item[field].display_value | limitTo : item[field].limit}}{{::item[field].display_value.length > item[field].limit ? '...' : ''}}</a><span ng-if="!$first">{{::item[field].display_value | limitTo : item[field].limit}}{{::item[field].display_value.length > item[field].limit ? '...' : ''}}</span>
            </td>
            <td class="itemData">
            <div class="btn-group"
                 ng-show="c.data.inputOptions.checkBoxSelectFunction == 'single'">			
              <label class="btn btn-default btn-sm" 
                     ng-click="c.selectedSingleChange($event, item)"
                     ng-class="{'active': !!item.selected}"
                     ng-show="data.inputOptions.inlineCheckbox">
                <input type="checkbox" name="singleCheck"
                       ng-model="item.selected"
                       >
                <span class="glyphicon glyphicon-ok"></span>
              </label>
            </div>
            <div class="btn-group" data-toggle="buttons"
                 ng-show="c.data.inputOptions.checkBoxSelectFunction == 'multiple'">			
              <label class="btn btn-default btn-sm" 
                     ng-click="c.selectedMultipleChange(item.sys_id)"
                     ng-class="{'active': !!item.selected}"
                     ng-show="data.inputOptions.inlineCheckbox">
                <input type="checkbox" name="singleCheck"
                       ng-model="item.selected"
                       >
                <span class="glyphicon glyphicon-ok"></span>
              </label>
            </div>
            <div class="btn-group"
                 ng-show="item.state.value == 2 && c.data.inputOptions.inlineButton"
                 ng-click="c.confirmCollectionLocation(delivery)">			
              <button class="btn btn-primary">
                Received
              </button>
            </div>          
          </td>
          </tr>
        </tbody>
      </table>

<!--<div class="panel-footer">
        <div class="btn-toolbar m-r pull-left"
             ng-show="c.data.list.length > rowsPerPage">
          <div class="btn-group">
            <a ng-disabled="currentPage == 0" href="javascript:void(0)" ng-click="currentPage=0" class="btn btn-default"  aria-label="${Previous page}"><i class="fa fa-angle-double-left"></i></a>
          </div>     
          <div class="btn-group">
            <a ng-disabled="currentPage == 0" href="javascript:void(0)" ng-click="currentPage = currentPage-1" class="btn btn-default"  aria-label="${Previous page}"><i class="fa fa-angle-left"></i></a>
          </div>     
          <div class="btn-group">
            <a ng-disabled="currentPage >= filteredList.length/rowsPerPage - 1" href="javascript:void(0)" ng-click="currentPage = currentPage+1" class="btn btn-default" aria-label="${Next page}"><i class="fa fa-angle-right"></i></a>          
          </div>
          <div class="btn-group">
            <a ng-disabled="currentPage >= filteredList.length/rowsPerPage - 1" href="javascript:void(0)" ng-click="currentPage = numberOfPages()-1" class="btn btn-default" aria-label="${Next page}"><i class="fa fa-angle-double-right"></i></a>          
          </div>       
        </div>   
        <div class="m-t-xs panel-title">Page {{currentPage+1}} of {{numberOfPages()}}<span class="m-t-xs panel-title pull-right"></span><span class="m-t-xs panel-title pull-right">{{c.data.list.length}} Row<span ng-if="c.data.list.length > 1">s</span></span></div>
        <span class="clearfix"></span>
      </div>
<!--<div class="alert alert-info"
       ng-show="c.data.list.length == 0">
        There are currently Deliveries awaiting collection
      </div>
<div class="panel panel-default"
     ng-show="c.data.list.length > 0">-->
  
    
  
<!-- <table class="table table-striped table-primary table-responsive">
      <thead>
        <tr>
          <th class="itemData"
              ng-repeat="field in data.field_labels track by $index">
            {{field}}         	
          </th>
        </tr>
      </thead>
      <tbody>
        <tr ng-repeat="delivery in c.data.list"
            ng-if="($index < ((currentPage+1) * rowsPerPage)) && ($index >= (((currentPage+1) * rowsPerPage) - rowsPerPage))">
          <td ng-repeat="field in data.fields_array">{{::delivery[field].display_value}}</td>
          <td class="itemData">
            <div class="btn-group"
                 ng-show="c.data.checkBoxSelectFunction == 'single'">			
              <label class="btn btn-default btn-sm" 
                     ng-click="c.selectedSingleChange($event, delivery)"
                     ng-class="{'active': !!delivery.selected}"
                     ng-show="data.inlineCheckbox">
                <input type="checkbox" name="singleCheck"
                       ng-model="delivery.selected"
                       >
                <span class="glyphicon glyphicon-ok"></span>
              </label>
            </div>
            <div class="btn-group" data-toggle="buttons"
                 ng-show="c.data.checkBoxSelectFunction == 'multiple'">			
              <label class="btn btn-default btn-sm" 
                     ng-click="c.selectedMultipleChange(delivery.sys_id)"
                     ng-class="{'active': !!delivery.selected}"
                     ng-show="data.inlineCheckbox">
                <input type="checkbox" name="singleCheck"
                       ng-model="delivery.selected"
                       >
                <span class="glyphicon glyphicon-ok"></span>
              </label>
            </div>
          </td>
        </tr>
    </table>
  
  <div class="panel-footer">
        <div class="btn-toolbar m-r pull-left"
             ng-show="c.data.list.length > rowsPerPage">
          <div class="btn-group">
            <a ng-disabled="currentPage == 0" href="javascript:void(0)" ng-click="currentPage=0" class="btn btn-default"  aria-label="${Previous page}"><i class="fa fa-angle-double-left"></i></a>
          </div>     
          <div class="btn-group">
            <a ng-disabled="currentPage == 0" href="javascript:void(0)" ng-click="currentPage = currentPage-1" class="btn btn-default"  aria-label="${Previous page}"><i class="fa fa-angle-left"></i></a>
          </div>     
          <div class="btn-group">
            <a ng-disabled="currentPage >= filteredList.length/rowsPerPage - 1" href="javascript:void(0)" ng-click="currentPage = currentPage+1" class="btn btn-default" aria-label="${Next page}"><i class="fa fa-angle-right"></i></a>          
          </div>
          <div class="btn-group">
            <a ng-disabled="currentPage >= filteredList.length/rowsPerPage - 1" href="javascript:void(0)" ng-click="currentPage = numberOfPages()-1" class="btn btn-default" aria-label="${Next page}"><i class="fa fa-angle-double-right"></i></a>          
          </div>       
        </div>   
        <div class="m-t-xs panel-title">Page {{currentPage+1}} of {{numberOfPages()}}<span class="m-t-xs panel-title pull-right"></span><span class="m-t-xs panel-title pull-right">{{c.data.list.length}} Row<span ng-if="c.data.list.length > 1">s</span></span></div>
        <span class="clearfix"></span>
      </div>
  
    <!--<table class="table table-striped table-primary table-responsive">
      <thead>
        <tr>
          <th class="itemData"
              ng-repeat="field in data.field_labels track by $index">
            {{field}}         	
          </th>
          <th ng-show="data.inline_checkbox || data.inline_button">Select</th>
        </tr>
      </thead>
      <tbody>
        <tr ng-repeat="delivery in c.data.list">
          <td ng-repeat="field in data.fields_array">{{::delivery[field].display_value}}</td>
          <td class="itemData">
            <div class="btn-group"
                 ng-click="c.confirmCollectionLocation(delivery)"
                 ng-show="data.inline_button">			
              <button class="btn btn-primary">
                {{data.button_label}}
              </button>
            </div>
          </td>
          <td>
          <div class="btn-group" data-toggle="buttons">	
            
            <label class="btn btn-default btn-sm" 
                   ng-click="c.selectedChange($event, delivery)"
                   ng-class="{'active': !!delivery.selected}"
                   ng-show="data.inline_checkbox">
              <input type="checkbox" name="singleCheck"
                     ng-model="delivery.selected">
              <span class="glyphicon glyphicon-ok"></span>
            </label>
            
          </div>          
        </td>
        </tr>
    </table>

<!--  </div>
<div class="panel panel-default"
     ng-show="c.data.showLocationUpdate">
  <div class="panel-heading">
    <h5>
      Confirm the collection location for {{c.data.expectedItemRecipient}}'s delivery item:
    </h5>
  </div>  
  <div class="panel-body">
    <div class="alert alert-danger alert-dismissible"
         ng-show="c.data.showError">
      <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
      <i class="fa fa-exclamation-triangle"></i> Some fields are missing: {{c.data.missingFieldsError}}
    </div>
    <div class="form-group">
      <span style="padding-right: .25em" title="Mandatory" class="fa fa-asterisk mandatory" ng-class="{'mandatory-filled': collectionLocation.displayValue != undefined}"></span>
      <label for="formGroupExampleInput">Collection Location</label> 
      <select class="form-control" ng-model="c.data.collectionLocation" ng-options="item for item in c.data.collectionLocationsArr"></select>
    </div>
    <button class="btn btn-default" ng-click="c.cancelForm()">
      Cancel
    </button>
    <button class="btn btn-primary pull-right"
            ng-click="c.saveItem('confirmLocation')">
      Confirm Receipt
    </button>
  </div>
</div>
<div ng-show="c.data.tableAction == 'collect_delivery'">
    <button class="btn btn-primary btn-block collectDelivery"
            ng-click="c.collectDelivery()"            
            ng-disabled="c.data.disabled">
      Collect Delivery <i class="fa fa-pencil-square-o fa-lg" aria-hidden="true"></i>
    </button>
  </div>
<div ng-show="c.data.tableAction == 'reminders'">
       <button class=" btn btn-default collectBtns"
          ng-click="c.cancel()">
    Cancel
  </button>
      <button class="btn btn-primary collectBtns pull-right"
          ng-show="c.data.list.length > 1"
          ng-disabled="c.data.disabled"
          ng-click="c.sendReminders('selected')">
    Send Selected
  </button> 
  <button class=" btn btn-primary collectBtns pull-right"
          ng-click="c.sendReminders('all')">
    Send <span ng-show="c.data.list.length > 1">All</span>
  </button>
    </div>]]></template>
    </sp_widget>
</record_update>

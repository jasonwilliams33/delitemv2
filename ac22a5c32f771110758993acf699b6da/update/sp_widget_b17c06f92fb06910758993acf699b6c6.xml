<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller=function($scope,$uibModal,spUtil,delitemModalPubSub,spModal) {
	/* widget controller */

	var c = this;

	c.data.manualSearch = false;
	c.data.searchDisabled = true;

	$scope.$on("field.change", function(evt,parms) {

		if(parms.field.value != '') {

			c.data.searchDisabled = false;			

		} else {

			c.data.searchDisabled = true;

		}	

	})

	delitemModalPubSub.subscribe($scope, function($event, data) {//Subscription to Angular Provider to retrieve data from Modal and update relevant variables

		
		c.data.searchDisabled = true;
		
		if(data.modalAction == "signatureAccepted") {
		
			c.modalInstance.close();
			
			c.data.manualSearch = false;
			c.data.recipient = {
				
				"value" : "",
				"displaYValue" : ""
				
			}

		} else if (data.modalAction == "qrCodeScaned") {

			c.modalInstance.close();

			c.server.get({

				action: "lookupDelivery",
				deliveryFilter: "sys_id=" + data.sys_id,// + "^state!=" + c.data.collected,
				recipient: c.data.recipient

			}).then(function(rsp) {
				
				if(rsp.data.deliveryStatus != "delivery_found") {

					spModal.alert(rsp.data.deliveryMessage);
					c.data.recipient.value = "";
					c.data.searchDisabled = true;
					
				} else {

					c.openModal("delitem_delivery_summary","Outstanding Deliveries",rsp.data.deliverySummaryOptions);

				}

			})

		}
		
		/*data.deliverySummaryOptions = {

			"deliverySysId": "fbd68d252f302910758993acf699b665",
			"deliveryItems": 2,
			"recipientFirstName": "Abel"

		};

		c.openModal("delitem_delivery_summary","Outstanding Deliveries",data.deliverySummaryOptions);*/

	})

	c.manualSearch = function() {

		c.data.manualSearch = true;

	}

	c.executeManualSearch = function() {

		c.server.get({

			action: "lookupDelivery",
			deliveryFilter: "state!=" + c.data.collected + "^recipient=" + c.data.recipient.value,
			recipient: c.data.recipient

		}).then(function(rsp) {

			if(rsp.data.deliveryStatus != "delivery_found") {

				spModal.alert(rsp.data.deliveryMessage);
				c.data.recipient.value = "";
				c.data.searchDisabled = true;

			} else {

				c.openModal("delitem_delivery_summary","Outstanding Deliveries",rsp.data.deliverySummaryOptions);

			}
		})

		

	}

	c.scanQRCode = function() {

		c.data.manualSearch = false;

		c.openModal('delitem_qr_code_live','Scan your QR Code below');

	}

	c.openModal = function(widget,title,modalObj) {

		/***
	 	* Open Modal using supplied parameters
	 	***/

		c.modalInstance = $uibModal.open({

			templateUrl: 'delitem-selfservice-custom-form-overlay.html',
			size: 'lg',
			backdrop: 'static',
			controllerAs: 'modalC',
			controller: function() {

				var modalC = this;
				modalC.modalInstance = c.modalInstance;
				modalC.title = title;
				spUtil.get(widget,modalObj).then(function(response) {

					modalC.widget = response;

				})

			}	

		})

	}

};]]></client_script>
        <controller_as>c</controller_as>
        <css>.wrap {
  justify-content: center;
  flex-wrap: wrap;
  display: flex;
}

.cardCount {
  padding: 10px;
  border-radius: 10px;
  width: 32%;
  margin-bottom: 2%;
  margin: 5px;
  flex: 0 1 auto;
  border: 1px solid rgb(221, 221, 221);
}

.wrap div:hover{
  background: #f7f7f7;
  -webkit-transition: background-color 250ms linear;
  -ms-transition: background-color 250ms linear;
  transition: background-color 250ms linear;
}

.docTitle, .content{
  margin: 5px;
  text-align: center;
}

.newDelivery{
  margin-top: 5px;
	width: 65%;
}

textarea {
  resize: none;
}

.selfServiceImgs{
	height: 30px;
  width: 30px;
}

.searchBtn{
	margin: 10px;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>delitem_self_service</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Delitem Self Service</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	/* populate the 'data' object */
	/* e.g., data.table = $sp.getValue('table'); */

	//data.deliveryNotFound = false;
	data.collected = DelItemConstants.COLLECTED;
	data.selfService = gs.getProperty("x_187394_delitem.self.service");

	if(input && input.action == "lookupDelivery") {

		try {

			var lookupDeliveryGRS = new GlideRecordSecure(DelItemConstants.DELIVERY_TABLE);
			lookupDeliveryGRS.addEncodedQuery(input.deliveryFilter);
			lookupDeliveryGRS.query();
			if(lookupDeliveryGRS.next()) {

				if(lookupDeliveryGRS.state != data.collected) {

					data.deliverySummaryOptions = {

						"sys_id": lookupDeliveryGRS.getUniqueValue(),
						"delivery_items_awaiting_collection": lookupDeliveryGRS.delivery_items_awaiting_collection.toString(),
						"recipientFirstName": lookupDeliveryGRS.recipient.first_name.toString()

					};

					data.deliveryStatus = "delivery_found";

				} else {

					data.userFirstName = lookupDeliveryGRS.recipient.first_name.toString();
					data.deliveryStatus = "delivery_collected";

				}


			} else {

				var userGRS = new GlideRecordSecure("sys_user");
				if(userGRS.get(input.recipient.value)) {

					data.userFirstName = userGRS.first_name.toString();

				}

				data.deliveryStatus = "delivery_not_found";

			}

			if(data.deliveryStatus == "delivery_not_found") {

				data.deliveryMessage = "No outstanding Deliveries were located for you " + data.userFirstName + ", please speak to reception if you need any further assistance";

			} else if (data.deliveryStatus == "delivery_collected") {

				data.deliveryMessage = "The Delivery has no remaining Delivery Items to be collected " + data.userFirstName + ", please speak to reception if you need any further assistance";

			}

		} catch(err) {

			gs.error('['+gs.getCurrentScopeName()+']' + ': Delitem Self Service Widget - Caught error: \n'+err);

		}

	}

})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-02-04 15:35:31</sys_created_on>
        <sys_id>b17c06f92fb06910758993acf699b6c6</sys_id>
        <sys_mod_count>63</sys_mod_count>
        <sys_name>Delitem Self Service</sys_name>
        <sys_package display_value="Delitem" source="x_187394_delitem">ac22a5c32f771110758993acf699b6da</sys_package>
        <sys_policy/>
        <sys_scope display_value="Delitem">ac22a5c32f771110758993acf699b6da</sys_scope>
        <sys_update_name>sp_widget_b17c06f92fb06910758993acf699b6c6</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-01-25 21:39:18</sys_updated_on>
        <template><![CDATA[<div class="panel panel-primary">
  <div class="panel-heading">
    Delitem
  </div>
  <div class="panel-body"> 
    <div class="wrap row"
         ng-show="c.data.selfService == 'false'">
      <h4>
        Please speak to your ServiceNow Administrator in order to activate Self Service
      </h4>
    </div>
    <div ng-show="c.data.selfService == 'true'">
      <div class="wrap row">
        <div class="cardCount"
             ng-click="c.scanQRCode()">
          <h5 class="docTitle">
            <span>
              <img class="img-circle pointer selfServiceImgs" ng-src="delitem-qr-reader-icon.png">
            </span>
            Scan QR Code
          </h5>
        </div>
        <div class="cardCount"
             ng-click="c.manualSearch()">
          <h5 class="docTitle">
            <span>
              <img class="img-circle pointer selfServiceImgs" ng-src="delitem_search_img.png">
            </span>
            Search Deliveries
          </h5>
        </div> 
      </div>
      <div class="form-group"
           ng-show="c.data.manualSearch">
        <span style="padding-right: .25em" title="Mandatory" class="fa fa-asterisk mandatory" ng-class="{'mandatory-filled': recipient.displayValue != undefined}"></span>
        <label for="formGroupExampleInput">Name</label>
        <sn-record-picker field="c.data.recipient"
                          name="recordPickerSingle"
                          table="'sys_user'" 
                          display-field="'name'" 
                          value-field="'sys_id'" 
                          search-fields="'name'" 
                          page-size="100"
                          id="recordPickerSingle"
                          autofocus
                          >
        </sn-record-picker>
        <div class="text-right">
          <button class="btn btn-primary searchBtn"
                  ng-click="c.executeManualSearch()"
                  ng-class="{ 'disabled' : c.data.searchDisabled }">
            Search
          </button>
        </div>
      </div>      
    </div>
  </div>    
</div>
]]></template>
    </sp_widget>
</record_update>

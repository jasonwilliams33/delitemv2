<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller=function($scope,delitemModalPubSub) {
	/* widget controller */
	var c = this;
	
	console.log(c);
	
/*	if(c.data.selfService == "true") {
		console.log(c);
	} else {
	console.log(c);	
	}
	*/
	
	c.data.selectedDeliveryItemArr = [];
	c.data.deliveryItemsSelected = false;
	
	c.data.disabled = true;
	
	c.selectDeliveryItem = function(sys_id) {

		var selectedItemIndex = c.data.selectedDeliveryItemArr.indexOf(sys_id);

		if(selectedItemIndex == -1) {

			c.data.selectedDeliveryItemArr.push(sys_id);


		} else {

			c.data.selectedDeliveryItemArr.splice(selectedItemIndex, 1);

		}
		
		if(c.data.selectedDeliveryItemArr.length > 0) { 
		
			c.data.disabled = false;
		
		} else {
			
			c.data.disabled = true;
			
		}
		
	}

	c.collect = function(action) {

		if(action == "all") {
			
			c.data.selectedDeliveryItemArr = c.data.retrievedDeliveryItemSysIdArr;
			
		}
		
		c.data.deliveryItemsSelected = true;
		

	}
	
	c.cancel = function() {
		
		var modalReturnObj = {
				
				"modalAction" : "cancel"
			
			}
		
		delitemModalPubSub.publish(modalReturnObj);
		
	}

	delitemModalPubSub.subscribe($scope, function($event, data) {

		c.server.get({

			action: "attachSignature",
			signature: data,
			deliveryItems: c.data.selectedDeliveryItemArr,			

		}).then(function(rsp) {
			
		})	

		c.data.deliveryItemsSelected = false;

	});

};]]></client_script>
        <controller_as>c</controller_as>
        <css>.panel-heading{
  color: #fff;
  background-color: $brand-primary;
}

.headingText{
  text-align: center;
}

.btn span.glyphicon {    			
	opacity: 0;
}

.btn.active span.glyphicon {				
	opacity: 1;		
  color: #ffffff;
}

.btn.active{
  background: $brand-primary;
  color: #ffffff;
}

.btn span.glyphicon {    			
	opacity: 0;
}

.btn.active span.glyphicon {				
	opacity: 1;		
  color: #ffffff;
}

.btn.active{
  background: $brand-primary;
  color: #ffffff;
}


.btn input{
	display:none;
}

.collectDelivery{
  margin-top: 10px;	
}

.outer{
	background-color: #ffffff;
  border: solid 1px;
}

.inner{
	background-color: $brand-primary;
  border-radius: 5px;
  //background-image: linear-gradient(to right top, #1f8476, #22957f, #2ba686, #38b78c, #48c891);
  border: solid 1px;

}

.collectBtns{
	margin: 5px;
  margin-top: 10px;
}

.headingText{
	text-align: center;
  color: #ffffff;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>delitem_delivery_summary</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Delitem Delivery Summary</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	/* populate the 'data' object */
	/* e.g., data.table = $sp.getValue('table'); */

	data.selfService = gs.getProperty("x_187394_delitem.self.service");
	//c.data.thisistheinput = input;
//	if(data.selfService == "false") {
		data.options = input || '';
	//}
	var deliverySysId;
	
	if(data.selfService == "false") {
	
		deliverySysId = options.deliverySysId;
		data.recipientFirstName = options.recipientFirstName;
		data.deliveryItems = options.deliveryItems;
		
	} else {
		
		deliverySysId = data.options.deliverySysId;
		data.recipientFirstName = data.options.recipientFirstName;
		data.deliveryItems = parseInt(data.options.deliveryItems);
		
	}
	
	data.retrievedDeliveryItemArr = [];
	data.retrievedDeliveryItemSysIdArr = [];
	data.multipleItems = false;

	try {

		var deliveryItemGR = new GlideRecordSecure(DelItemConstants.DELIVERY_ITEM_TABLE);
		deliveryItemGR.addEncodedQuery("state!=3^ORstate=NULL^delivery=" + deliverySysId);
		deliveryItemGR.query();
		while(deliveryItemGR.next()) {

			data.retrievedDeliveryItemObj = {};
			data.retrievedDeliveryItemObj.date_received = deliveryItemGR.date_received.toString();
			data.retrievedDeliveryItemObj.sender = deliveryItemGR.sender.toString() || "N/A";
			data.retrievedDeliveryItemObj.notes = deliveryItemGR.notes.toString() || "N/A";
			data.retrievedDeliveryItemObj.collection_location = deliveryItemGR.collection_location.toString();
			data.retrievedDeliveryItemObj.sys_id = deliveryItemGR.getUniqueValue();
			data.retrievedDeliveryItemArr.push(data.retrievedDeliveryItemObj);
			data.retrievedDeliveryItemSysIdArr.push(deliveryItemGR.getUniqueValue());

			if(data.deliveryItems > 1) {

				data.multipleItems = true;

			}

		}

	} catch(err) {

		gs.error('['+gs.getCurrentScopeName()+']' + ': widget - Caught error: \n'+err);

	}

	if(input && input.action == "attachSignature") {

		try {

			for(var i = 0; i < input.deliveryItems.length; i++) {

				var attach = new GlideRecordSecure(DelItemConstants.DELIVERY_ITEM_TABLE);
				attach.get(input.deliveryItems[i]);

				var dataUrl = input.signature.dataUrl;
				var dataUrlSplit = dataUrl.split('base64,');

				var attachment = new GlideSysAttachment();
				var attachmentSysId = attachment.writeBase64(attach, "signature.png", "image/png", dataUrlSplit[1]);

				attach.setValue('state',3);
				attach.setValue('date_collected',new GlideDateTime());
				attach.setValue('recipient_signature',attachmentSysId);
				attach.update();

			}

		} catch(err) {

			gs.error('['+gs.getCurrentScopeName()+']' + ': widget - Caught error: \n'+err);

		}

	}

})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-01-27 21:11:45</sys_created_on>
        <sys_id>05bc4a172f202110758993acf699b698</sys_id>
        <sys_name>Delitem Delivery Summary</sys_name>
        <sys_package display_value="Delitem" source="x_187394_delitem">ac22a5c32f771110758993acf699b6da</sys_package>
        <sys_policy/>
        <sys_scope display_value="Delitem">ac22a5c32f771110758993acf699b6da</sys_scope>
        <sys_update_name>sp_widget_05bc4a172f202110758993acf699b698</sys_update_name>
        <template><![CDATA[<!--<div class="panel panel-default"
     ng-show="!c.data.deliveryItemsSelected">
  <div class="panel-heading">
    <h3 class="headingText">
    Hi {{c.data.recipientFirstName}},<br><br>You have {{c.data.selectedItem.deliveryItems}} Delivery Item(s) awaiting collection:<br>
  </h3>
  </div>

    <table class="table table-striped table-responsive">
    <thead>
      <tr>
        <th>Date Received</th> 
        <th>Sender</th>
        <th>Notes</th>
        <th>Collection Location</th>
        <th ng-show="c.data.selectedItem.deliveryItems > 1">Select</th>
      </tr>
    </thead>
    <tbody>
      <tr ng-repeat="delivery in c.data.retrievedDeliveryItemArr">
        <td>{{delivery.date_received}}</td>
        <td>{{delivery.sender}}</td>
        <td>{{delivery.notes}}</td>
        <td>{{delivery.collection_location}}</td>
        <td ng-show="c.data.multipleItems">
          <div class="btn-group" data-toggle="buttons">	
            <label class="btn btn-default btn-sm" 
                   ng-click="c.selectDeliveryItem(delivery.sys_id)"
                   ng-class="{'active': !!delivery.selected}">
              <input type="checkbox" name="singleCheck">
              <span class="glyphicon glyphicon-ok"></span>
            </label>
          </div>          
        </td>
      </tr>
  </table>  
<div> 
    <button class=" btn btn-default pull-right collectBtns"
            ng-disabled="c.data.disabled"
            ng-click="c.collect('all')">
      Collect <span ng-show="c.data.multipleItems">All</span>
    </button>
    <button class=" btn btn-default pull-right collectBtns"
            ng-show="c.data.multipleItems"
            ng-disabled="c.data.disabled"
            ng-click="c.collect('selected')">
      Collect Selected
    </button>  
  </div>
</div>
<div ng-show="c.data.deliveryItemsSelected">
  <widget id="delitem_scratch_pad"></widget>
</div>-->

<div class="jumbotron inner">
  <h3 class="headingText"
      ng-show="!c.data.deliveryItemsSelected">
    Hi {{c.data.recipientFirstName}},<br><br>You have {{c.data.deliveryItems}} x Delivery Item<span ng-show="c.options.deliveryItems > 1">s</span> awaiting collection:<br>
  </h3>
  <h3 class="headingText"
      ng-show="c.data.deliveryItemsSelected">
		Add your signature below to collect your <span ng-show="c.data.selectedDeliveryItemArr.length > 1">{{c.data.selectedDeliveryItemArr.length}} x selected items</span><span ng-show="c.data.selectedDeliveryItemArr.length == 1">selected item</span><br>
  </h3>
</div>

<div class="panel panel-default"
     ng-show="!c.data.deliveryItemsSelected">
  <table class="table table-striped table-primary table-responsive">
    <thead>
      <tr>
        <th>Date Received</th> 
        <th>Collection Location</th>
        <th>Sender</th>
        <th>Notes</th>        
        <th ng-show="c.data.selectedItem.deliveryItems > 1">Select</th>
      </tr>
    </thead>
    <tbody>
      <tr ng-repeat="delivery in c.data.retrievedDeliveryItemArr">
        <td>{{delivery.date_received}}</td>
        <td>{{delivery.collection_location}}</td>
        <td>{{delivery.sender}}</td>
        <td>{{delivery.notes}}</td>
        <td ng-show="c.data.multipleItems">
          <div class="btn-group" data-toggle="buttons">	
            <label class="btn btn-default btn-sm" 
                   ng-click="c.selectDeliveryItem(delivery.sys_id)"
                   ng-class="{'active': !!delivery.selected}">
              <input type="checkbox" name="singleCheck">
              <span class="glyphicon glyphicon-ok"></span>
            </label>
          </div>          
        </td>
      </tr>
  </table>  
</div>
<div ng-show="!c.data.deliveryItemsSelected">
       <button class=" btn btn-default collectBtns"
          ng-click="c.collect('selected')">
    Cancel
  </button>
      <button class="btn btn-primary collectBtns pull-right"
          ng-show="c.data.multipleItems"
          ng-disabled="c.data.disabled"
          ng-click="c.collect('selected')">
    Collect Selected
  </button> 
  <button class=" btn btn-primary collectBtns pull-right"
          ng-click="c.collect('all')">
    Collect <span ng-show="c.data.multipleItems">All</span>
  </button>
    </div>
<!--<div class="container" ng-show="!c.data.deliveryItemsSelected">
  <div class="text-left">
  <button class=" btn btn-default collectBtns"
          ng-click="c.collect('selected')">
    Cancel
  </button>
  </div>
  <div class="text-right">
      <button class="btn btn-primary collectBtns"
          ng-show="c.data.multipleItems"
          ng-disabled="c.data.disabled"
          ng-click="c.collect('selected')">
    Collect Selected
  </button> 
  <button class=" btn btn-primary collectBtns"
          ng-click="c.collect('all')">
    Collect <span ng-show="c.data.multipleItems">All</span>
  </button>
  </div>
</div>-->
<div ng-show="c.data.deliveryItemsSelected">
  <widget id="delitem_scratch_pad"></widget>
</div>]]></template>
    </sp_widget>
</record_update>

<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller=function($timeout,delitemModalPubSub,$scope,$rootScope) {
	/* widget controller */
	
	var c = this;
	
	console.log(c);
	
//$scope.$on("field.change", function(evt, parms) { alert("test")});
					 
	c.data.recipient = { 

		displayValue: c.data.recipientDisplay,
		value: c.data.recipientFilter,
		name: 'Recipient'

	};
//alert("here");
	c.data.notes = c.data.options.delivery.notes.value;

	c.data.sender = c.data.options.delivery.sender.value;

	c.data.selectedState = {
		value: c.data.options.delivery.state.value
	}

	c.data.dateExpected = {
		value: c.data.options.delivery.date_expected
	}

	if(c.data.options.delivery.state.value != 2) {

		c.data.selectedCollectionLocation = c.data.options.delivery.collection_location.value;

	}

	c.data.missingFields = '';
	c.missingFieldsError = '';

	c.generateErrorString = function(fullString) {

		var string = fullString.replace(/,\s*$/, "");
		var return_string = '';
		var split_string = string.split(',');

		if (split_string.length == 1) {

			return_string = string;

		} else {

			return_string = string.replace(/,/g, " & ");

		}

		return return_string;

	}

	c.close = function() {

		var closeObj = {};
		closeObj.type = 'close';
		delitemModalPubSub.publish(closeObj);

	}

	c.saveRecord = function() {

		if(c.data.recipient.value == undefined || c.data.recipient.value == '') {

			c.data.missingFields += 'Recipient,';

		}

		if(c.data.selectedState == undefined || c.data.selectedState == '') {

			c.data.missingFields += 'State,';

		}

		if(c.data.selectedState.value != 2) {

			if(c.data.selectedCollectionLocation == undefined || c.data.selectedCollectionLocation == '') {

				c.data.missingFields += 'Collection Location,';

			}

		}

		if(c.data.selectedState.value == 2) {

			if(c.data.dateExpected.value == undefined || c.data.dateExpected.value == '') {

				c.data.missingFields += 'Date Expected,';

			}

		}

		if(c.data.missingFields != '') {

			c.data.missingFieldsError = c.generateErrorString(c.data.missingFields);
			c.data.missingFields = '';
			c.data.showError = true;

			$timeout(function() {

				c.data.showError = false;
				c.data.missingFields = '';
				c.data.missingFieldsError = '';

			},3000);

			return;

		}

		var deliveryItemObj = {};

		deliveryItemObj.recipient = c.data.recipient;
		deliveryItemObj.state = c.data.selectedState;
		deliveryItemObj.sender = c.data.sender;
		deliveryItemObj.collectionLocation = c.data.selectedCollectionLocation;
		deliveryItemObj.notes = c.data.notes;
		deliveryItemObj.date_expected = c.data.dateExpected;

		var deliveryObj = {

			"modalAction": "update_delivery",
			"deliveryItemSysId": c.data.options.delivery.sys_id,
			"delivery": deliveryItemObj

		}

		console.log(deliveryItemObj);

		delitemModalPubSub.publish(deliveryObj);

	}

};]]></client_script>
        <controller_as>c</controller_as>
        <css>.btn{
  
  //margin: 5px;
  
}

.panel-heading{
  
  color: #fff;
  background-color: $brand-primary;
  
}

.headingPanel{
  
  margin-bottom: 10px !important;
  text-align: center;
  
}

textarea {
        resize: none;
    }</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>edit_delivery_item</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {
  
}]]></link>
        <name>Edit Delivery Item</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	/* populate the 'data' object */
	/* e.g., data.table = $sp.getValue('table'); */

	data.options = input;
	
	data.delieveryItemTable = DelItemConstants.DELIVERY_ITEM_TABLE;
	data.newState = DelItemConstants.NEW;
	data.expectedState = DelItemConstants.EXPECTED;
	data.awaitingCollectionState = DelItemConstants.AWAITING_COLLECTION;
	data.collectedState = DelItemConstants.COLLECTED;
	data.cancelledState = DelItemConstants.CANCELLED;

	data.recipientFilter = "sys_id=" + data.options.delivery.recipient.value;
	data.recipientDisplay = data.options.delivery.recipient.display_value;	



	//data.stateDefault = {value: '3', label: 'Option C'};//data.options.delivery.state.value;
	data.stateDisplay = "Awaiting Collection";//data.options.delivery.state.value;
	data.stateDefault = {
		id: data.options.delivery.state.id, 
		name: data.options.delivery.state.label
	}

	data.stateChoicesArr = [];
	var stateChoicesObj = {};

	var grSysChoice = new GlideRecord('sys_choice');
	grSysChoice.addEncodedQuery("name=" + data.delieveryItemTable);
	grSysChoice.orderBy('value')
	grSysChoice.query();
	while (grSysChoice.next()) {
		
		if(grSysChoice.value != 1) {

		stateChoicesObj = {};
		stateChoicesObj.label = grSysChoice.label.toString();
		stateChoicesObj.value = grSysChoice.value.toString();
		data.stateChoicesArr.push(stateChoicesObj);
			
		}

	}

	var collectionLocationsStr = gs.getProperty("x_187394_delitem.collection.locations");
	data.collectionLocationsArr = collectionLocationsStr.split(",");


})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-12-08 17:27:06</sys_created_on>
        <sys_id>1d166be897c775108c1bf911f053af5c</sys_id>
        <sys_mod_count>294</sys_mod_count>
        <sys_name>Edit Delivery Item</sys_name>
        <sys_package display_value="Delitem" source="x_187394_delitem">ac22a5c32f771110758993acf699b6da</sys_package>
        <sys_policy/>
        <sys_scope display_value="Delitem">ac22a5c32f771110758993acf699b6da</sys_scope>
        <sys_update_name>sp_widget_1d166be897c775108c1bf911f053af5c</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-03-08 12:04:41</sys_updated_on>
        <template><![CDATA[<div class="panel panel-default">
  <div class= panel-heading>
    <span>
      {{c.data.options.delivery.number}}
    </span>
    <span class="pull-right">
      {{c.data.options.delivery.delivery}}
    </span>
  </div>
  <div class="panel-body">    
    <div class="alert alert-danger alert-dismissible"
         ng-show="c.data.showError">
      <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
      <i class="fa fa-exclamation-triangle"></i> Some fields are incomplete: {{c.data.missingFieldsError}}
    </div>
    <form>
      <div class="form-row">
        <div class="form-group col-md-6"><span style="padding-right: .25em" title="Mandatory" class="fa fa-asterisk mandatory"></span>
          <label for="application">State</label>
          <select name="stateSelect" id="stateSelect"
                  ng-options="option.label for option in data.stateChoicesArr track by option.value"
                  ng-model="data.selectedState"
                  class="form-control"></select>
        </div>
        <div class="form-group col-md-6"><span style="padding-right: .25em" title="Mandatory" class="fa fa-asterisk mandatory"></span>
          <label for="application">Recipient</label>
          <sn-record-picker field="c.data.recipient" 
                            table="'sys_user'" 
                            display-field="'name'" 
                            value-field="'sys_id'" 
                            search-fields="'name'" 
                            page-size="100" 
                            sn-disabled=true></sn-record-picker>
        </div>
        <div class="form-row">
          <div class="form-group col-md-6">
            <label for="sender">Sender</label>
            <input id="labelText" type="text" ng-model="c.data.sender" class="form-control" autofocus>
          </div>
          <div class="form-group col-md-6"
               ng-show="c.data.selectedState.value != 2">
            <span style="padding-right: .25em" 
                  title="Mandatory" 
                  class="fa fa-asterisk mandatory"
                  ng-show="c.data.selectedState.value != 2"
                  >
            </span>
            <label for="application">Collection Location</label>
            <select name="collectionLocationSelect" id="collectionLocationSelect"
                    ng-options="option for option in data.collectionLocationsArr"
                    ng-model="data.selectedCollectionLocation"
                    class="form-control"></select>

          </div>
          <div class="form-group col-md-6"
               ng-show="c.data.selectedState.value == 2">
            <span style="padding-right: .25em" 
                  title="Mandatory" 
                  class="fa fa-asterisk mandatory"                  
                  >
            </span>
            <label for="notes">Date Expected</label>          
            <sp-date-picker field="c.data.dateExpected"></sp-date-picker>
          </div>
        </div>
        <div class="form-row">
          <div class="form-group col-md-12">
            <label for="notes">Notes</label> 
            <textarea id="notes" class="form-control" ng-model="c.data.notes" rows="2" autofocus></textarea>
          </div>
        </div>
      </div>
    </form>
    <div>
      <button class="btn btn-default" ng-click="c.close()">
        Cancel
      </button>
      <button class="btn btn-primary pull-right"
              ng-click="c.saveRecord()"              
              >
        Save
      </button>
    </div>        
]]></template>
    </sp_widget>
</record_update>

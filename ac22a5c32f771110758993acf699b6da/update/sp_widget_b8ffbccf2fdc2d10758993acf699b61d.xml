<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller=function() {
  /* widget controller */
  var c = this;
			
	c.data.deliverySelected = false;
	c.data.delveryItemsSelected = false;
	c.data.selectedDeliveryItemArr = [];
	c.data.selectedDeliveryItemObj = {};
	
	c.collectDelivery = function() {
					//console.log(c);	
		c.server.get({

			action: "retrieveDeliveryItems",
			deliverySysId: c.data.selectedItem.sys_id,
			deliveryItems: c.data.selectedItem.deliveryItems,
			recipientFirstName: c.data.selectedItem.recipientFirstName

		}).then(function(rsp) {
//console.log(rsp);
			c.data.deliverySummaryWidget = rsp.data.deliverySummaryWidget;
			
			c.data.retrievedDeliveryItemArr = rsp.data.retrievedDeliveryItemArr;
//console.log(c.data.retrievedDeliveryItemArr);
		})	
		
		c.data.deliverySelected = true;
		
	}
	
	/*c.collect = function() {
		
		c.data.deliveryItemsSelected = true;
		console.log(c.data.selectedDeliveryItemArr);
		
	}*/
	
	c.selectDeliveryItem = function(sys_id) {
		
		var selectedItemIndex = c.data.selectedDeliveryItemArr.indexOf(sys_id);
		
		if(selectedItemIndex == -1) {
		
			c.data.selectedDeliveryItemArr.push(sys_id);
			
			
		} else {
			
			c.data.selectedDeliveryItemArr.splice(selectedItemIndex, 1);
						
		}

	}
	
	c.selectedChange = function(e, data) {		

		var selectedItem = _.find(c.data.deliveriesArr, {'selected': true});

		if(selectedItem) {
			
			c.data.selectedItem = data;			

			if(selectedItem.sys_id == data.sys_id) {

				//c.data.selectedExisingPush = data;

				return;

			}	else {

				_.find(c.data.deliveriesArr, {'sys_id': selectedItem.sys_id}).selected = false;
				_.find(c.data.deliveriesArr, {'sys_id': data.sys_id}).selected = true;			
				//c.data.selectedExisingPush = _.find(c.data.pushArr, {'name': data.sys_id});
				e.stopPropagation();
				e.preventDefault();

				//c.data.selectedExisingPush = data;
				return false;

			}

		}

	}
	
};]]></client_script>
        <controller_as>c</controller_as>
        <css>.panel-heading{
  color: #fff;
  background-color: $brand-primary;
}

.headingText{
  text-align: center;
}

.btn span.glyphicon {    			
	opacity: 0;
}

.btn.active span.glyphicon {				
	opacity: 1;		
  color: #ffffff;
}

.btn.active{
  background: $brand-primary;
  color: #ffffff;
}

.radioLabels{
  margin: 10px;
}

.radioButtons{
	width: 100%;
}

.typeSelectionPanel,.confirmBtn,.radioButtons{
	margin-top: 20px !important;
}

.existingPush{
	margin-top: 10px;
}

.btn span.glyphicon {    			
	opacity: 0;
}

.btn.active span.glyphicon {				
	opacity: 1;		
  color: #ffffff;
}

.btn.active{
  background: $brand-primary;
  color: #ffffff;
}


.btn input{
	display:none;
}

.collectDelivery{
  margin-top: 10px;	
}

.outer{
	background-color: #ffffff;
  border: solid 1px;
}

.inner{
	background-color: $brand-primary;
  //background-image: linear-gradient(to right top, #1f8476, #22957f, #2ba686, #38b78c, #48c891);
  border: solid 1px;

}

.collectBtns{
	margin: 5px;
}

.headingText,.itemData{
	text-align: center;
  //color: #ffffff;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>delivery_table_modal</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Delivery Table Modal</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	/* populate the 'data' object */
	/* e.g., data.table = $sp.getValue('table'); */

	data.options = input || '';
	data.deliveriesArr = [];
	data.retrievedDeliveryItemArr = [];
	data.deliverySummaryOptions = {};

	var deliveriesGR = new GlideRecordSecure(DelItemConstants.DELIVERY_TABLE);
	deliveriesGR.addEncodedQuery("state!=" + DelItemConstants.COLLECTED);
	deliveriesGR.query();
	while (deliveriesGR.next()) {

		var deliveriesObj = {};
		deliveriesObj.recipient = deliveriesGR.recipient.getDisplayValue();
		deliveriesObj.recipientFirstName = deliveriesGR.recipient.first_name.toString();
		deliveriesObj.deliveryItems = deliveriesGR.delivery_items_awaiting_collection.toString();
		deliveriesObj.created = deliveriesGR.sys_created_on.toString();
		deliveriesObj.sys_id = deliveriesGR.getUniqueValue();
		data.deliveriesArr.push(deliveriesObj);

	}

	///data.newDeliveryFilter = "date_receivedONToday@javascript:gs.beginningOfToday()@javascript:gs.endOfToday()";
	//data.delieveryItemTable = DelItemConstants.DELIVERY_ITEM_TABLE;

	if(data.options.action == "todays" || data.options.action == "outstanding") {

		data.displayDataTable = true;

	} else {

		data.displayDataTable = false;		

	}

	data.tableOptions = {

		"table": data.options.table,
		"filter": data.options.filter,
		"fields": "date_received,recipient,sender,collection_location,notes,state",
		"window_size": data.options.window_size,
		"hide_header": true

	};

	if(input && input.action == "retrieveDeliveryItems") {

		data.deliverySummaryOptions = {

			"deliverySysId": input.deliverySysId,
			"deliveryItems": input.deliveryItems,
			"recipientFirstName": input.recipientFirstName

		};

		data.deliverySummaryWidget = $sp.getWidget("delitem_delivery_summary", data.deliverySummaryOptions);

		/*	var deliveryItemGR = new GlideRecordSecure(DelItemConstants.DELIVERY_ITEM_TABLE);
		deliveryItemGR.addEncodedQuery("delivery=" + input.deliverySysId);
		deliveryItemGR.query();
		while(deliveryItemGR.next()) {

			data.retrievedDeliveryItemObj = {};
			data.retrievedDeliveryItemObj.date_received = deliveryItemGR.date_received.toString();
			data.retrievedDeliveryItemObj.sender = deliveryItemGR.sender.toString();
			data.retrievedDeliveryItemObj.notes = deliveryItemGR.notes.toString();
			data.retrievedDeliveryItemObj.collection_location = deliveryItemGR.collection_location.toString();
			data.retrievedDeliveryItemObj.sys_id = deliveryItemGR.getUniqueValue();
			data.retrievedDeliveryItemArr.push(data.retrievedDeliveryItemObj);

		}*/					

	}

})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-01-14 10:42:15</sys_created_on>
        <sys_id>b8ffbccf2fdc2d10758993acf699b61d</sys_id>
        <sys_mod_count>11</sys_mod_count>
        <sys_name>Delivery Table Modal</sys_name>
        <sys_package display_value="Delitem" source="x_187394_delitem">ac22a5c32f771110758993acf699b6da</sys_package>
        <sys_policy/>
        <sys_scope display_value="Delitem">ac22a5c32f771110758993acf699b6da</sys_scope>
        <sys_update_name>sp_widget_b8ffbccf2fdc2d10758993acf699b61d</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-02-28 16:48:07</sys_updated_on>
        <template><![CDATA[<div ng-show="!c.data.deliverySelected">
  <div ng-show="c.data.displayDataTable">
    <widget id="widget-data-table" options='data.tableOptions'></widget>    
  </div>
  <div class="alert alert-info"
       ng-show="!c.data.displayDataTable && c.data.deliveriesArr.length == 0">
        There are currently Deliveries awaiting collection
      </div>
  <div class="panel panel-default"
       ng-show="!c.data.displayDataTable && c.data.deliveriesArr.length > 0">
    <table class="table table-striped table-primary table-responsive">
      <thead>
        <tr>
          <th class="itemData">Recipient</th> 
          <th class="itemData">Delivery Items</th>
          <th class="itemData">Created</th>
          <th class="itemData">Select</th>
        </tr>
      </thead>
      <tbody>
        <tr ng-repeat="delivery in c.data.deliveriesArr">
          <td class="itemData">{{delivery.recipient}}</td>
          <td class="itemData">{{delivery.deliveryItems}}</td>
          <td class="itemData">{{delivery.created}}</td>
          <td class="itemData">
            <div class="btn-group">			
              <label class="btn btn-default btn-sm" 
                     ng-click="c.selectedChange($event, delivery)"
                     ng-class="{'active': !!delivery.selected}">
                <input type="checkbox" name="singleCheck"
                       ng-model="delivery.selected"
                       >
                <span class="glyphicon glyphicon-ok"></span>
              </label>
            </div>
          </td>
        </tr>
    </table>  
  </div>
  <div>
    <button class="btn btn-primary btn-block collectDelivery"
            ng-click="c.collectDelivery()"
            ng-show="!c.data.displayDataTable">
      Collect Delivery <i class="fa fa-pencil-square-o fa-lg" aria-hidden="true"></i>
    </button>
  </div>
</div>
<div ng-show="c.data.deliverySelected && !c.data.delveryItemsSelected">
  <sp-widget widget="c.data.deliverySummaryWidget"></sp-widget>
</div>]]></template>
    </sp_widget>
</record_update>
